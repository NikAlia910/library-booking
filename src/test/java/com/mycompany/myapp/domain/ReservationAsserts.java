package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReservationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservationAllPropertiesEquals(Reservation expected, Reservation actual) {
        assertReservationAutoGeneratedPropertiesEquals(expected, actual);
        assertReservationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservationAllUpdatablePropertiesEquals(Reservation expected, Reservation actual) {
        assertReservationUpdatableFieldsEquals(expected, actual);
        assertReservationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservationAutoGeneratedPropertiesEquals(Reservation expected, Reservation actual) {
        assertThat(actual)
            .as("Verify Reservation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservationUpdatableFieldsEquals(Reservation expected, Reservation actual) {
        assertThat(actual)
            .as("Verify Reservation relevant properties")
            .satisfies(a -> assertThat(a.getReservationDate()).as("check reservationDate").isEqualTo(expected.getReservationDate()))
            .satisfies(a -> assertThat(a.getStartTime()).as("check startTime").isEqualTo(expected.getStartTime()))
            .satisfies(a -> assertThat(a.getEndTime()).as("check endTime").isEqualTo(expected.getEndTime()))
            .satisfies(a -> assertThat(a.getReservationId()).as("check reservationId").isEqualTo(expected.getReservationId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservationUpdatableRelationshipsEquals(Reservation expected, Reservation actual) {
        assertThat(actual)
            .as("Verify Reservation relationships")
            .satisfies(a -> assertThat(a.getResource()).as("check resource").isEqualTo(expected.getResource()));
    }
}
